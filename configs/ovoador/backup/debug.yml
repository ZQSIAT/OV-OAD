_base_: '../default.yml'
model_name: 'debug' # display name in the logger
output: /mnt/petrelfs/heyinan/00_zqs/data/exps/debug
device: cuda
debug: False
print_freq: 10
single_eval: true

data:
  with_dc: false
  train: 
      root_dir: 'phdd:s3://internvid_extc_feats_4fps/CLIP_ViT_B_16_768/'
      meta_file: '/mnt/petrelfs/heyinan/00_zqs/code/ovoad/extract_features/internvid10w_20m_oad_instances.json'
      anno_file: '/mnt/petrelfs/heyinan/00_zqs/code/ovoad/extract_features/internvid10w_anno_106176.pickle'
      read_from: petrel
      use_nvideos: 50
      nonzero: 0  # 2000/8: 1.67M; 5000/8: 3.95M; 10000/8: 7.41M; 12000/8: 8.74M; 15000/8: 10.75M; 106176/8: 63.05M
      enc_steps: 128 # 128
      dec_steps: 8
      caption_pick: 'random'
      use_dali: True
      batch_size: 256  # 256
      input_size: 224
      test_resize: 256
      verb_aug: false
      verb_filter: false # 剔除不包含verb的caption没用

      image_reader:
          type: pil
      sampler:
          type: distributed_epoch
      transforms:
          type: STANDARD
      use_ranked: False
      
      use_entity: ${model.use_entityloss}
      mask_type: verb # dobj verb 预测动词或动宾短语
      use_distilbert: True
  
  val:
      type: clip
      read_from: petrel
      use_dali: True
      batch_size: 64
      num_workers: 4
      pin_memory: False
      input_size: 224
      test_resize: 256
      
      root_dir: '/mnt/cache/share/images/val/'
      meta_file: 'imagenet_info/val.json'
      # you can change it to imagenet_info relative path, file already in gitlab
      image_reader:
          type: pil
      sampler:
          type: distributed
      transforms:
          type: ONECROP
      evaluator:
          type: imagenet
          kwargs:
              topk: [1, 5]
      label_texts_ensemble: 'prompt1'
          
  text_aug:
    max_seq_len: 77
    multi_label: 0 # use multi-label contrastive 
    word_type: 'verb' # dobj / verb 动词或动宾短语

model:
  type: MultiLabelContrastive
  img_encoder:
    type: GroupViT
    embed_dim: 768  # small : 384; base: 768
    num_heads: [8, 8]  # small : [6, 6] 
    embed_factors: [1, 1]
    depths: [6, 6]
    num_group_tokens: [8, 0]
    num_output_groups: [2]
    # embed_factors: [1, 1, 1]
    # num_heads: [8, 8, 8]
    # depths: [6, 3, 3]
    # num_group_tokens: [8, 4, 0]
    # num_output_groups: [4, 2]
    drop_rate: 0.1 # 0.0
    attn_drop_rate: 0.1 # 0.0
    drop_path_rate: 0.1 # 0.1
    no_patch_embed: true
    enc_steps: ${data.train.enc_steps}
    dec_steps: ${data.train.dec_steps}
    use_direc_mask: true
    patch_norm: false
    imgnet_pretrained: null # 'bert'
    fixed: false
    imgnet_pretrained_checkpoint: '/mnt/petrelfs/heyinan/00_zqs/code/ovoad/models/pretrained_models/bert-base-uncased'

  text_encoder:
    type: CLIPTransformer
    context_length: 77
    width: 512
    layers: 12
    vocab_size: 49408
    pretrained: true
    fixed: true
    ffn_adapt: true  # 'whether activate AdaptFormer'
    ffn_option: "parallel"
    ffn_adapter_layernorm_option: "none"
    ffn_adapter_init_option: "lora"
    ffn_adapter_scalar: "0.1"
    ffn_num: 64
  contrast_temperature: 0.07
  proj_num_layers: 2
  output_dim: 256
  multi_label: ${data.text_aug.multi_label}
  use_entityloss: false
  entity_weight: 1.0
  use_maskloss: false
  maskloss_weight: 0.1
  
train:
  epochs: 30
  base_lr: 6.4e-5
  warmup_lr: 1.6e-6
  min_lr: 1.6e-5
checkpoint:
  auto_resume: false
  resume: null
  save_freq: 50
evaluate:
  eval_freq: 1
  oad:
    enc_steps: ${data.train.enc_steps}
    eval_type: "single" # set saliency probs
    single_eval: ${single_eval}
    datasets: [
      # 'thomus', 
      # 'tvseries',
      'epic',
      # 'epic',
      # 'anet',
      ]
    cfg: [
      # 'oad/configs/_base_/datasets/thomus14.py',
      # 'oad/configs/_base_/datasets/tvseries.py',
      'oad/configs/_base_/datasets/epic_action.py',
      # 'oad/configs/_base_/datasets/epic_noum.py',
      # 'oad/configs/_base_/datasets/anet.py',
      ]
    template: simple_kinectics  # full_kinectics, subset_kinectics, simple_imagenet, etc
