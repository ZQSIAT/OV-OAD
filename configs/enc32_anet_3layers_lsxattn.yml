_base_: '.default.yml'
model_name: 'ovoador' # display name in the logger
use_nvideos: -1  # total: 14950, -1 means use all videos 
output: xxx/xxx

device: cuda
debug: False
print_freq: 100
single_eval: false

data:
  with_dc: False
  train: 
    root_dir: 'xxx/anet_extc_feats_4fps/src_img/'
    meta_file: '/mnt/petrelfs/xxx/code/ovoad/extract_features/data_list/new_data_info.json'
    anno_file: 'xxx/ovoad_dataset_annos/anet/anno'
    read_from: petrel
    use_nvideos: ${use_nvideos} 
    nonzero: 0  
    enc_steps: 32 # 128
    dec_steps: 8
    long_term_steps: 0
    caption_pick: 'txt_cat'
    use_dali: True
    batch_size: 32 # 256
    input_size: 224
    test_resize: 256
    verb_aug: false
    verb_filter: false
    use_saliency: ${model.use_saliency}
    use_enc_feat: ${model.use_enc_feat}
    saliency_steps: ${model.saliency_steps} # number frame for saliency branch, default is 1
    image_reader:
          type: pil
    sampler:
          type: distributed_epoch
    transforms:
          type: STANDARD
    use_ranked: False
    
    use_entity: ${model.use_entityloss} 
    mask_type: verb 
    use_distilbert: True
    input_type: image_numpy

  text_aug:
    max_seq_len: 77
    multi_label: 3 # we use multi-label contrastive 
    word_type: 'verb'

  val:
      type: clip
      read_from: petrel
      use_dali: True
      batch_size: 64
      num_workers: 4
      pin_memory: False
      input_size: 224
      test_resize: 256
      
      root_dir: '/mnt/cache/share/images/val/'
      meta_file: 'imagenet_info/val.json'
      # you can change it to imagenet_info relative path, file already in gitlab
      image_reader:
          type: pil
      sampler:
          type: distributed
      transforms:
          type: ONECROP
      evaluator:
          type: imagenet
          kwargs:
              topk: [1, 5]
      label_texts_ensemble: 'prompt1'
          
model:
  type: MultiLabelContrastive
  img_encoder:
    type: GroupViT
    embed_dim: 768  # small : 384; base: 768

    num_heads: [8, 8, 8]  # small : [6, 6] 
    embed_factors: [1, 1, 1]
    depths: [4, 6, 2] # [4, 6, 2]
    num_group_tokens: [0, 8, 0]
    num_output_groups: [0, 2]

    drop_rate: 0.1 # 0.1 
    attn_drop_rate: 0.1 # 0.1 
    drop_path_rate: 0.1 # 0.1 
    no_patch_embed: true 
    enc_steps: ${data.train.enc_steps} 
    dec_steps: ${data.train.dec_steps} 
    patch_norm: false

    use_enc_feat: ${model.use_enc_feat} 
    enc_feat_lsxattn: ${model.enc_feat_lsxattn} 
    long_term_detach: false  
    switch_off_layer0: false 

    mask_attn_layers: [0]  
    only_mask_short: false 
    long_term_compress: null  

    pre_proj: "identity" 
    imgnet_pretrained: null 
    pretrained: true
    fixed: true
    tune_config:
      ffn_adapt: true  
      ffn_option: "parallel" 
      ffn_adapter_layernorm_option: "none"
      ffn_adapter_init_option: "lora"
      ffn_adapter_scalar: "0.1"
      ffn_num: 128 
      d_model: ${model.img_encoder.embed_dim}

  text_encoder:
    type: CLIPTransformer
    context_length: 77
    width: 512
    layers: 12
    vocab_size: 49408
    pretrained: true
    fixed: false
    ffn_adapt: true  # 'whether activate AdaptFormer'
    ffn_option: "parallel"
    ffn_adapter_layernorm_option: "none"
    ffn_adapter_init_option: "lora"
    ffn_adapter_scalar: "0.1"
    ffn_num: 64
  contrast_temperature: 0.07
  proj_num_layers: 2 
  output_dim: 256
  multi_label: ${data.text_aug.multi_label}

  use_entityloss: false
  entity_weight: 1.0

  use_diceloss: true
  diceloss_weight: 1.0

  use_focalloss: false
  focalloss_weight: 5.0

  use_saliency: false 
  saliency_steps: 1 # number frame for saliency branch, default is 1
  saliency_weight: 0.1
  
  use_enc_feat: true 
  enc_feat_lsxattn: true
  enc_feat_weight: 0.1

train:
  epochs: 30
  base_lr: 6.4e-5
  warmup_lr: 1.6e-6 
  warmup_epochs: 2
  min_lr: 1.6e-5
  clip_grad: 5.0
checkpoint:
  auto_resume: false
  resume: null
  save_freq: 50
evaluate:
  eval_freq: 10
  oad:
    enc_steps: ${data.train.enc_steps}
    long_term_steps: ${data.train.long_term_steps}
    eval_type: "single" # set saliency probs
    use_saliency: ${model.use_saliency}
    use_enc_feat: ${model.use_enc_feat}
    single_eval: ${single_eval}
    datasets: [
      'thomus', 
      ]
    cfg: [
      'oad/configs/_base_/datasets/thomus14.py',
      ]
    template: simple_kinectics  # full_kinectics, subset_kinectics, simple_imagenet, etc

